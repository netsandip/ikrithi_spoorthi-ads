<?phpclass My_Acl {    var $perms = array();       //Array : Stores the permissions for the user    var $userID;            //Integer : Stores the ID of the current user    var $userRoles = array();   //Array : Stores the roles of the current user    var $ci;    function __construct($config = array()) {        $this->ci = &get_instance();        $this->userID = floatval($config['user_id']);        $this->userRoles = $this->getUserRoles();        $this->buildACL();    }    function buildACL() {        //first, get the rules for the user's role        if (count($this->userRoles) > 0) {            $this->perms = array_merge($this->perms, $this->getRolePerms($this->userRoles));        }        //then, get the individual user permissions        $this->perms = array_merge($this->perms, $this->getUserPerms($this->userID));    }    function getPermKeyFromID($permID) {        //$strSQL = "SELECT `permKey` FROM `".DB_PREFIX."permissions` WHERE `ID` = " . floatval($permID) . " LIMIT 1";        $this->ci->db->select('perm_key');        $this->ci->db->where('id', floatval($permID));        $sql = $this->ci->db->get('acl_permissions', 1);        if ($sql->num_rows() > 0) {            $data = $sql->result();            return $data[0]->perm_key;        }        return FALSE;    }    function getPermNameFromID($permID) {        //$strSQL = "SELECT `permName` FROM `".DB_PREFIX."permissions` WHERE `ID` = " . floatval($permID) . " LIMIT 1";        $this->ci->db->select('perm_name');        $this->ci->db->where('id', floatval($permID));        $sql = $this->ci->db->get('acl_permissions', 1);        if ($sql->num_rows() > 0) {            $data = $sql->result();            return $data[0]->perm_name;        }        return FALSE;    }    function getRoleNameFromID($roleID) {        if (empty($roleID))            return FALSE;        //$strSQL = "SELECT `roleName` FROM `".DB_PREFIX."roles` WHERE `ID` = " . floatval($roleID) . " LIMIT 1";        $this->ci->db->select('role_name');        $this->ci->db->where('id', floatval($roleID), 1);        $sql = $this->ci->db->get('acl_roles');        if ($sql->num_rows() > 0) {            $data = $sql->result();            return $data[0]->role_name;        }        return FALSE;    }    function getUserRoles() {        //$strSQL = "SELECT * FROM `".DB_PREFIX."user_roles` WHERE `userID` = " . floatval($this->userID) . " ORDER BY `addDate` ASC";        $this->ci->db->where(array('user_id' => floatval($this->userID)));        $this->ci->db->order_by('add_date', 'asc');        $sql = $this->ci->db->get('acl_user_roles');        $data = $sql->result();        $resp = array();        foreach ($data as $row) {            $resp[] = $row->role_id;        }        return $resp;    }    function getAllRoles($format = 'ids') {        $format = strtolower($format);        //$strSQL = "SELECT * FROM `".DB_PREFIX."roles` ORDER BY `roleName` ASC";        $this->ci->db->order_by('role_name', 'asc');        $sql = $this->ci->db->get('acl_roles');        $data = $sql->result();        $resp = array();        foreach ($data as $row) {            if ($format == 'full') {                $resp[] = array("id" => $row->id, "name" => $row->role_name);            } else {                $resp[] = $row->id;            }        }        return $resp;    }    function getAllPerms($format = 'ids') {        $format = strtolower($format);        //$strSQL = "SELECT * FROM `".DB_PREFIX."permissions` ORDER BY `permKey` ASC";//        $this->ci->db->order_by('perm_key', 'asc');        $this->ci->db->order_by('perm_name', 'asc');//        $this->ci->db->order_by('id', 'asc');        $sql = $this->ci->db->get('acl_permissions');        $data = $sql->result();        $resp = array();        foreach ($data as $row) {            if ($format == 'full') {                $resp[$row->perm_key] = array('id' => $row->id, 'name' => $row->perm_name, 'key' => $row->perm_key);            } else {                $resp[] = $row->ID;            }        }        return $resp;    }    function getRolePerms($role) {        if (is_array($role)) {            //$roleSQL = "SELECT * FROM `".DB_PREFIX."role_perms` WHERE `roleID` IN (" . implode(",",$role) . ") ORDER BY `ID` ASC";            $this->ci->db->where_in('role_id', $role);        } else {            //$roleSQL = "SELECT * FROM `".DB_PREFIX."role_perms` WHERE `roleID` = " . floatval($role) . " ORDER BY `ID` ASC";            $this->ci->db->where(array('role_id' => floatval($role)));        }        $this->ci->db->order_by('id', 'asc');        $sql = $this->ci->db->get('acl_role_perms'); //$this->db->select($roleSQL);        $data = $sql->result();        $perms = array();        foreach ($data as $row) {            $pK = strtolower($this->getPermKeyFromID($row->perm_id));            if ($pK == '') {                continue;            }            if ($row->value === '1') {                $hP = true;            } else {                $hP = false;            }            $perms[$pK] = array('perm' => $pK, 'inheritted' => true, 'value' => $hP, 'name' => $this->getPermNameFromID($row->perm_id), 'id' => $row->perm_id);        }        return $perms;    }    function getUserPerms($userID) {        //$strSQL = "SELECT * FROM `".DB_PREFIX."user_perms` WHERE `userID` = " . floatval($userID) . " ORDER BY `addDate` ASC";        $this->ci->db->where('user_id', floatval($userID));        $this->ci->db->order_by('add_date', 'asc');        $sql = $this->ci->db->get('acl_user_perms');        $data = $sql->result();        $perms = array();        foreach ($data as $row) {            $pK = strtolower($this->getPermKeyFromID($row->permID));            if ($pK == '') {                continue;            }            if ($row->value == '1') {                $hP = true;            } else {                $hP = false;            }            $perms[$pK] = array('perm' => $pK, 'inheritted' => false, 'value' => $hP, 'name' => $this->getPermNameFromID($row->permID), 'id' => $row->permID);        }        return $perms;    }    function hasRole($roleID) {        foreach ($this->userRoles as $k => $v) {            if (floatval($v) === floatval($roleID)) {                return true;            }        }        return false;    }    function hasPermission($permKey) {        $permKey = strtolower($permKey);        if (array_key_exists($permKey, $this->perms)) {            if ($this->perms[$permKey]['value'] === '1' || $this->perms[$permKey]['value'] === true) {                return true;            } else {                return false;            }        } else {            return false;        }    }}