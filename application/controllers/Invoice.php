<?phpclass Invoice extends MY_Controller {    function __construct() {        parent::__construct();        $this->load->helper(array('form'));        $this->load->library(array('form_validation'));        $this->load->model('invoice_model');    }    public function index() {        $this->data['subview'] = $this->load->view('invoice/view', NULL, TRUE);        $this->load->view('layout/header');        $this->load->view('layout/_main', $this->data);        $this->load->view('layout/footer');    }    public function quick_add() {        $data['input_name'] = array('type' => 'text', 'id' => 'name', 'name' => 'name');        $this->load->view('invoice/_modal_add', $data);    }    public function add() {        $this->load->model('client_model');        $this->data['scripts'][] = base_url('assets/dist/js/invoice-add.js');        $this->data['action'] = 'invoice/add';        /*         * Validation rules         */        $rules_add_invoice = array(            array(                'field' => 'client',                'label' => 'Client',                'rules' => 'required'            )        );        $this->form_validation->set_rules($rules_add_invoice);        if ($this->form_validation->run() === FALSE) {            $this->data['message'] = (validation_errors() == '') ? $this->session->flashdata('message') : alert_message(validation_errors(), 'error');        } else {            $this->invoice_model->create();            $this->session->set_flashdata('message', alert_message('Invoice added successfully', 'success'));            redirect('invoice/add', 'refresh');        }        /*         * Form inputs         */        $this->data['input_hue'] = array('type' => 'text', 'name' => 'hue', 'value' => set_value('hue'));        // Fetch clients        $clients = $this->client_model->find_all();        $this->data['dropdown_client']['options'] = array();        $this->data['dropdown_client']['options'][''] = 'Select Client';        foreach ($clients as $client) {            $this->data['dropdown_client']['options'][$client->id] = $client->name;        }        $this->data['dropdown_client']['default'] = set_value('client');        $this->data['subview'] = $this->load->view('invoice/add', $this->data, TRUE);        $this->load->view('layout/header');        $this->load->view('layout/_main', $this->data);        $this->load->view('layout/footer');    }    public function edit($id) {        $this->load->model('client_model');        $this->load->model('tax_model');        $this->data['scripts'][] = base_url('assets/dist/js/invoice-add.js');        $this->data['action'] = 'invoice/edit/' . $id;        $invoice = $this->invoice_model->get_invoice($id);        $invoice_orders = $this->invoice_model->get_invoice_orders($invoice->id);        $this->data['invoice'] = $invoice;        $this->data['invoice_orders'] = $invoice_orders;        $this->data['invoice_order_items'] = $this->invoice_model->get_invoice_order_items($invoice->id);        /*         * Validation rules         */        $rules_add_invoice = array(            array(                'field' => 'client',                'label' => 'Client',                'rules' => 'required'            )        );        $this->form_validation->set_rules($rules_add_invoice);        if ($this->form_validation->run() === FALSE) {            $this->data['message'] = (validation_errors() == '') ? $this->session->flashdata('message') : alert_message(validation_errors(), 'error');        } else {            $this->invoice_model->update($id);             $this->session->set_flashdata('message', alert_message('Invoice updated successfully', 'success'));			//redirect('invoice/view/' . $id, 'refresh');            redirect('invoice/view/' . $id);        }        /*         * Form inputs         */        $this->data['input_hue'] = array('type' => 'text', 'name' => 'hue', 'value' => $invoice->hue);        // Fetch tax         $tax_items = $this->tax_model->find_all();        $this->data['dropdown_tax_items'] = '<select id="tax" name="tax" class="form-control" onchange="computeInvoiceTax();">';        $this->data['dropdown_tax_items'] .= '<option value="">Select Tax</option>';        foreach ($tax_items as $tax_item) {            if ($tax_item->type === 'percentage') {                $tax_item_value = $tax_item->name . ' (' . $tax_item->value . '%)';            } else {                $tax_item_value = $tax_item->name . ' (Rs.' . number_format($tax_item->value, 2, '.', '') . ')';            }            $this->data['dropdown_tax_items'] .= '<option data-taxtype="' . $tax_item->type . '" data-taxvalue="' . $tax_item->value . '" value="' . $tax_item->id . '">' . $tax_item_value . '</option>';        }        $this->data['dropdown_tax_items'] .= '<select>';        //Check        $this->data['label_tax_rate'] = '<label id="tax_r" name="tax_r" class="form-control" value="34"> 34</label>';        // Fetch clients        $clients = $this->client_model->find_all();        $this->data['dropdown_client']['options'] = array();        $this->data['dropdown_client']['options'][''] = 'Select Client';        foreach ($clients as $client) {            $this->data['dropdown_client']['options'][$client->id] = $client->name;        }        $this->data['dropdown_client']['default'] = set_value('client');        // Fetch release orders        $release_orders = $this->client_model->find_all_release_orders($invoice->client_id);        $this->data['dropdown_release_order']['options'] = array();        foreach ($release_orders as $release_order) {            $this->data['dropdown_release_order']['options'][$release_order->id] = $release_order->release_order_no;        }        foreach ($invoice_orders as $invoice_order) {            $selected_release_order_ids[] = $invoice_order->release_order_id;        }        $this->data['dropdown_release_order']['default'] = $selected_release_order_ids;        $this->data['subview'] = $this->load->view('invoice/edit', $this->data, TRUE);        $this->load->view('layout/header');        $this->load->view('layout/_main', $this->data);        $this->load->view('layout/footer');    }        public function view($id) {        $this->load->model('client_model');        $this->data['scripts'][] = base_url('assets/dist/js/invoice-add.js');        $this->data['action'] = 'invoice/edit/' . $id;        $invoice = $this->invoice_model->get_invoice($id);        $invoice_orders = $this->invoice_model->get_invoice_orders($invoice->id);        $this->data['invoice'] = $invoice;        $this->data['invoice_orders'] = $invoice_orders;        $this->data['invoice_order_items'] = $this->invoice_model->get_invoice_order_items($invoice->id);        /*         * Validation rules         */        $rules_add_invoice = array(            array(                'field' => 'client',                'label' => 'Client',                'rules' => 'required'            )        );        $this->form_validation->set_rules($rules_add_invoice);        if ($this->form_validation->run() === FALSE) {            $this->data['message'] = (validation_errors() == '') ? $this->session->flashdata('message') : alert_message(validation_errors(), 'error');        } else {            $this->invoice_model->update($id);            $this->session->set_flashdata('message', alert_message('Invoice updated successfully', 'success'));            redirect('invoice/edit/' . $id, 'refresh');        }        /*         * Form inputs         */        $this->data['input_hue'] = array('type' => 'text', 'name' => 'hue', 'value' => $invoice->hue);        // Fetch clients        $clients = $this->client_model->find_all();        $this->data['dropdown_client']['options'] = array();        $this->data['dropdown_client']['options'][''] = 'Select Client';        foreach ($clients as $client) {            $this->data['dropdown_client']['options'][$client->id] = $client->name;        }        $this->data['dropdown_client']['default'] = set_value('client');        // Fetch release orders        $release_orders = $this->client_model->find_all_release_orders($invoice->client_id);        $this->data['dropdown_release_order']['options'] = array();        foreach ($release_orders as $release_order) {            $this->data['dropdown_release_order']['options'][$release_order->id] = $release_order->release_order_no;        }        foreach ($invoice_orders as $invoice_order) {            $selected_release_order_ids[] = $invoice_order->release_order_id;        }        $this->data['dropdown_release_order']['default'] = $selected_release_order_ids;        $this->data['subview'] = $this->load->view('invoice/single_view', $this->data, TRUE);        $this->load->view('layout/header');        $this->load->view('layout/_main', $this->data);        $this->load->view('layout/footer');    }    public function fetch_post() {        $draw = $this->input->post('draw');        $limit = $this->input->post('length');        $offset = $this->input->post('start');        $search = $this->input->post('search[value]');        $sort_column = $this->input->post('order[0][column]');        $order = $this->input->post('order[0][dir]');        $data = array(            'limit' => $limit,            'offset' => $offset,            'search' => $search,            'sort' => $sort_column,            'order' => $order        );        $total_records = $this->invoice_model->total_records();        $return_data = $this->invoice_model->get_view($data);        if ($return_data['query']) {//            $index = 1;            foreach ($return_data['query']->result() as $row) {                $rows[] = array(//                    $index++,                    form_checkbox('chk_row[]', $row->id, FALSE, array('class' => 'chk_row')),                    html_escape(date('d/m/Y', strtotime($row->created))),                    html_escape($row->invoice_no),                    html_escape($row->client_name),                    html_escape($row->total_amount),                    "<a href='" . base_url('invoice/view/' . html_escape($row->id)) . "' class='btn btn-xs btn-primary'><i class='fa fa-list'></i></a>&nbsp;".                    "<a href='" . base_url('invoice/edit/' . html_escape($row->id)) . "' class='btn btn-xs btn-success'><i class='fa fa-edit'></i></a>"//                    . "&nbsp;&nbsp;<a href='' class='btn btn-xs btn-danger'><i class='fa fa-times'></i></a>"                );            }            $filtered_records = $return_data['count'];        } else {            $filtered_records = 0;            $rows = '';        }        $output = array(            'draw' => (int) $draw,            'recordsFiltered' => $filtered_records,            'recordsTotal' => $total_records,            'data' => $rows        );        $this->output                ->set_content_type('application/json')                ->set_output(json_encode($output));    }    public function get_new_invoice_details_html() {        $html = "";        $this->load->model('release_order_model');        $release_order_ids = $this->input->post('release_orders');        $release_orders = $this->release_order_model->get_release_orders_in($release_order_ids);        $release_order_items = $this->release_order_model->get_release_order_items_in($release_order_ids);        foreach ($release_orders as $release_order) {            $hidden_fields['caption[' . $release_order['id'] . ']'] = $release_order['caption'];            $hidden_fields['order_date[' . $release_order['id'] . ']'] = $release_order['order_date'];            $hidden_fields['advertisement_name[' . $release_order['id'] . ']'] = $release_order['advertisement_name'];        }//        $html .= form_hidden($hidden_fields);        $html .= '<table class="table table-bordered table-condensed">';        $html .= '<colgroup>';        $html .= '<col style="width:5%">';        $html .= '<col style="width:20%">';        $html .= '<col style="width:10%">';        $html .= '<col style="width:10%">';        $html .= '<col style="width:10%">';        $html .= '<col style="width:10%">';        $html .= '<col style="width:15%">';        $html .= '<col style="width:10%">';        $html .= '<col style="width:10%">';        $html .= '</colgroup>';        $html .= '<thead>';        $html .= '<tr>';        $html .= '<th>#</th>';        $html .= '<th>RO No</th>';        $html .= '<th>Publication Name</th>';        $html .= '<th>Edition</th>';        $html .= '<th>Size</th>';        $html .= '<th>Date</th>';        $html .= '<th>Page</th>';        $html .= '<th>Base Rate</th>';        $html .= '<th>Amount</th>';        $html .= '</tr>';        $html .= '</thead>';        $html .= '<tbody>';        $index = 1;        $total_base_rate = 0;        $total_amount = 0;        foreach ($release_order_items as $release_order_item) {            $release_order_item_id = $index;            $size_arr = explode("_", $release_order_item->size);            $hidden_fields['release_order_item_id[' . $release_order_item_id . ']'] = $release_order_item->release_order_item_id;            $hidden_fields['release_order_no[' . $release_order_item_id . ']'] = $release_order_item->release_order_no_prefix . $release_order_item->release_order_no;            $hidden_fields['publication[' . $release_order_item_id . ']'] = $release_order_item->publication;            $hidden_fields['insertion_date[' . $release_order_item_id . ']'] = $release_order_item->insertion_date;            $hidden_fields['edition[' . $release_order_item_id . ']'] = $release_order_item->edition;            $hidden_fields['page_type[' . $release_order_item_id . ']'] = $release_order_item->page;            if ($release_order_item->package_id == 0) {                $hidden_fields['package[' . $release_order_item_id . ']'] = "";            } else {                $hidden_fields['package[' . $release_order_item_id . ']'] = html_escape($release_order_item->package_name) . ' (' . $release_order_item->package_paid . '+' . $release_order_item->package_free . ')';            }            $hidden_fields['size[' . $release_order_item_id . ']'] = $release_order_item->size;//            if (isset($size_arr[1])) {//                $hidden_fields['size_width[' . $release_order_item_id . ']'] = $size_arr[0];//                $hidden_fields['size_height[' . $release_order_item_id . ']'] = $size_arr[1];//            } else {//                $hidden_fields['size[' . $release_order_item_id . ']'] = $size_arr[0];//            }            if (isset($size_arr[1])) {                $size = $size_arr[0] * $size_arr[1];                $size_str = $size_arr[0] . ' x ' . $size_arr[1];            } else {                $size = $size_arr[0];                $size_str = $size_arr[0];            }            $amount = $size * $release_order_item->base_rate;            $total_base_rate += $release_order_item->base_rate;            $total_amount += $amount;            $html .= '<tr>';            $html .= '<td>' . $index . '</td>';            $html .= '<td>' . $release_order_item->release_order_no_prefix . $release_order_item->release_order_no . '</td>';            $html .= '<td>' . $release_order_item->publication . '</td>';            $html .= '<td>' . $release_order_item->edition . '</td>';            $html .= '<td>' . $size_str . '</td>';            $html .= '<td>' . date('d/m/Y', strtotime($release_order_item->insertion_date)) . '</td>';            $html .= '<td>' . $release_order_item->page . '</td>';            if ($release_order_item->package_id == 0) {                $html .= '<td>';                $html .= form_input('base_rate[' . $release_order_item_id . ']', $release_order_item->base_rate, array('class' => 'form-control base_rate', 'onkeyup' => 'updateAmount(this.value,\'' . $release_order_item->size . '\',\'amount' . $index . '\')'));                $html .= '</td>';            } else {                $hidden_input_base_rate = array(                    'type' => 'hidden',                    'name' => 'base_rate[' . $release_order_item_id . ']',                    'value' => $release_order_item->base_rate,                    'class' => 'base_rate'                );                $html .= form_input($hidden_input_base_rate);                $html .= '<td title="' . html_escape($release_order_item->package_desc) . '">' . html_escape($release_order_item->package_name) . ' (' . $release_order_item->package_paid . '+' . $release_order_item->package_free . ')</td>';            }            $html .= '<td class="amount" id="amount' . $index . '" class="text-right">' . number_format($amount, 2, '.', '') . '</td>';            $html .= '</tr>';            $index++;        }        $html .= '</tbody>';        $html .= '<tfoot>';        $html .= '<tr>';        $html .= '<th colspan="7" class="text-right"><strong>TOTAL</strong></th>';        $html .= '<th class="text-right"><strong id="total_base_rate">' . number_format($total_base_rate, 2, '.', '') . '</strong></th>';        $html .= '<th class="text-right"><strong id="total_amount">' . number_format($total_amount, 2, '.', '') . '</strong></th>';        $html .= '</tr>';        $html .= '</tfoot>';        $html .= form_hidden($hidden_fields);        $this->output->set_output($html);    }    public function bulk_delete() {        $ids = $this->input->post('data_ids');        if (empty($ids)) {            $this->session->set_flashdata('message', alert_message('Selected atleast one record to delete', 'success'));            redirect('invoice', 'refresh');        }        $id_array = explode(",", $ids);        foreach ($id_array AS $id) {            $this->invoice_model->delete($id);        }        $this->session->set_flashdata('message', alert_message('Selected records are deleted', 'success'));        redirect('invoice', 'refresh');    }      public function company()    {          $this->load->model('Company_model');        $this->load->helper('url');         $this->data['subview'] = $this->load->view('invoice/company', NULL, TRUE);        $this->load->view('layout/header');        $this->load->view('layout/_main', $this->data);        $this->load->view('layout/footer');    }  }