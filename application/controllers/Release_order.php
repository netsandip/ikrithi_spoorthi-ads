<?phpclass Release_Order extends MY_Controller {    function __construct() {        parent::__construct();        $this->load->helper(array('form'));        $this->load->library(array('form_validation'));        $this->load->model('release_order_model');    }    public function index() {        $this->data['message'] = $this->session->flashdata('message');        $this->data['subview'] = $this->load->view('release_order/view', $this->data, TRUE);        $this->load->view('layout/header');        $this->load->view('layout/_main', $this->data);        $this->load->view('layout/footer');    }    public function quick_add() {        $data['input_name'] = array('type' => 'text', 'id' => 'name', 'name' => 'name');        $this->load->view('release_order/_modal_add', $data);    }    public function add() {        $this->load->model('tax_model');        $this->load->model('vendor_model');        $this->load->model('client_model');        $this->load->model('ad_type_model');        $this->load->model('publication_model');        $this->load->model('page_type_model');        $this->load->model('material_type_model');        $this->load->model('material_status_model');        $this->data['scripts'][] = base_url('assets/dist/js/release-order-add.js');        $this->data['action'] = 'release_order/add';        /*         * Validation rules         */        $rules_add_order = array(            array(                'field' => 'vendor',                'label' => 'Vendor',                'rules' => 'required|integer',                'errors' => array(                    'integer' => "Invalid vendor selected"                )            ),                           array(                'field' => 'coordinator',                'label' => 'Select Coordinator',                'rules' => 'required'                    )        );        $this->form_validation->set_rules($rules_add_order);                if ($this->form_validation->run() === FALSE) {            $this->data['message'] = (validation_errors() == '') ? $this->session->flashdata('message') : alert_message(validation_errors(), 'error');        } else {            $this->release_order_model->create();            $this->session->set_flashdata('message', alert_message('Order added successfully', 'success'));            redirect('release_order/add', 'refresh');        }        /*         * Form inputs         */        $this->data['input_caption'] = array('name' => 'caption', 'value' => set_value('caption'));        $this->data['input_material_status'] = array('name' => 'material_status', 'value' => set_value('material_status'));        // Fetch vendors        $vendors = $this->vendor_model->find_all();        $this->data['dropdown_vendor']['options'] = array();        $this->data['dropdown_vendor']['options'][''] = 'Select Vendor';        foreach ($vendors as $vendor) {            $this->data['dropdown_vendor']['options'][$vendor->id] = $vendor->company_name;        }        $this->data['dropdown_vendor']['default'] = set_value('vendor');        // Fetch clients        $clients = $this->client_model->find_all();        $this->data['dropdown_client']['options'] = array();        $this->data['dropdown_client']['options'][''] = 'Select Client';        foreach ($clients as $client) {            $this->data['dropdown_client']['options'][$client->id] = $client->name;        }        $this->data['dropdown_client']['default'] = set_value('client');        // Fetch ad_types        $ad_types = $this->ad_type_model->find_all();        /* $this->data['dropdown_ad_type']['options'] = array();          $this->data['dropdown_ad_type']['options'][''] = 'Select Advertisement Type';          foreach ($ad_types as $ad_type) {          $this->data['dropdown_ad_type']['options'][$ad_type->id] = $ad_type->name;          }          $this->data['dropdown_ad_type']['default'] = set_value('ad_type'); *///        $this->data['dropdown_ad_type'] = '<select id="ad_type" onchange="setSize();resetPackages();" name="ad_type" class="form-control">';        $this->data['dropdown_ad_type'] = '<select id="ad_type" onchange="setSize();loadPackages(this, \'package\')" name="ad_type" class="form-control">';        $this->data['dropdown_ad_type'] .= '<option value="">Select Advertisement Type</option>';        foreach ($ad_types as $ad_type) {            $this->data['dropdown_ad_type'] .= '<option data-size="' . $ad_type->size . '" value="' . $ad_type->id . '">' . $ad_type->name . '</option>';        }        $this->data['dropdown_ad_type'] .= '</select>';        // Fetch publications        /* $publications = $this->publication_model->find_all();          $this->data['dropdown_publication']['options'] = array();          $this->data['dropdown_publication']['options'][''] = 'Select Publication';          foreach ($publications as $publication) {          $this->data['dropdown_publication']['options'][$publication->name] = $publication->name;          }          $this->data['dropdown_publication']['default'] = set_value('publication'); */        // Fetch page types        $page_types = $this->page_type_model->find_all();        $this->data['dropdown_page_type']['options'] = array();        $this->data['dropdown_page_type']['options'][''] = 'Select Page Type';        if ($page_types) {            foreach ($page_types as $page_type) {                $this->data['dropdown_page_type']['options'][$page_type->name] = $page_type->name;            }        }        $this->data['dropdown_page_type']['default'] = set_value('page_type');        // Fetch material types        $material_types = $this->material_type_model->find_all();        $this->data['dropdown_material_type']['options'] = array();        $this->data['dropdown_material_type']['options'][''] = 'Select Material Type';        foreach ($material_types as $material_type) {            $this->data['dropdown_material_type']['options'][$material_type->name] = $material_type->name;        }        $this->data['dropdown_material_type']['default'] = set_value('material_type');        // Fetch material status        $material_statuses = $this->material_status_model->find_all();        $this->data['dropdown_material_status']['options'] = array();        $this->data['dropdown_material_status']['options'][''] = 'Select Material Status';        foreach ($material_statuses as $material_status) {            $this->data['dropdown_material_status']['options'][$material_status->name] = $material_status->name;        }        $this->data['dropdown_material_status']['default'] = set_value('material_status');        // Fetch tax        $tax_items = $this->tax_model->find_all();        $this->data['dropdown_tax_items'] = '<select id="tax" name="tax" class="form-control" onchange="computeTax();">';        $this->data['dropdown_tax_items'] .= '<option value="">Select Tax</option>';        foreach ($tax_items as $tax_item) {            if ($tax_item->type === 'percentage') {                $tax_item_value = $tax_item->name . ' (' . $tax_item->value . '%)';            } else {                $tax_item_value = $tax_item->name . ' (Rs.' . number_format($tax_item->value, 2, '.', '') . ')';            }            $this->data['dropdown_tax_items'] .= '<option data-taxtype="' . $tax_item->type . '" data-taxvalue="' . $tax_item->value . '" value="' . $tax_item->id . '">' . $tax_item_value . '</option>';        }        $this->data['dropdown_tax_items'] .= '<select>';        // Load view        $this->data['subview'] = $this->load->view('release_order/add', $this->data, TRUE);        $this->load->view('layout/header');        $this->load->view('layout/_main', $this->data);        $this->load->view('layout/footer');    }    public function edit($id) {        $this->load->model('tax_model');        $this->load->model('vendor_model');        $this->load->model('client_model');        $this->load->model('ad_type_model');        $this->load->model('publication_model');        $this->load->model('page_type_model');        $this->load->model('material_type_model');        $this->load->model('material_status_model');        $this->data['scripts'][] = base_url('assets/dist/js/release-order-add.js');        $this->data['action'] = 'release_order/edit/' . $id;        $row = $this->release_order_model->find_by_id($id);        // Check whether invoice is generated        if ($row->invoice_generated == 1) {            $this->session->set_flashdata('message', alert_message('Order cannot be edited.', 'info'));            redirect('release_order', 'refresh');        }        $this->data['order'] = $row;        $this->data['order_items'] = $this->release_order_model->get_release_order_items($id);        $this->data['vendor_id'] = $row->vendor_id;        $this->data['release_order_no'] = $row->release_order_no_prefix . $row->release_order_no;        $this->data['ad_type_id'] = $row->advertisement_type_id;        // Fetch vendor details        $this->data['vendor'] = $this->vendor_model->find_by_id($row->vendor_id);        /*         * Validation rules         */        $rules_add_order = array(            array(                'field' => 'vendor',                'label' => 'Vendor',                'rules' => 'required|integer',                'errors' => array(                    'integer' => "Invalid vendor selected"                )            )        );        $this->form_validation->set_rules($rules_add_order);        if ($this->form_validation->run() === FALSE) {            $this->data['message'] = (validation_errors() == '') ? $this->session->flashdata('message') : alert_message(validation_errors(), 'error');        } else {            $this->release_order_model->update($id);            $this->session->set_flashdata('message', alert_message('Order updated successfully', 'success'));            redirect('release_order/edit/' . $id, 'refresh');        }        /*         * Form inputs         */        $this->data['input_caption'] = array('name' => 'caption', 'value' => $row->caption);        $this->data['input_material_status'] = array('name' => 'material_status', 'value' => $row->material_status);        // Fetch vendors        $vendors = $this->vendor_model->find_all();        $this->data['dropdown_vendor']['options'] = array();        $this->data['dropdown_vendor']['options'][''] = 'Select Vendor';        foreach ($vendors as $vendor) {            $this->data['dropdown_vendor']['options'][$vendor->id] = $vendor->company_name;        }        $this->data['dropdown_vendor']['default'] = $row->vendor_id;        // Fetch clients        $clients = $this->client_model->find_all();        $this->data['dropdown_client']['options'] = array();        $this->data['dropdown_client']['options'][''] = 'Select Client';        foreach ($clients as $client) {            $this->data['dropdown_client']['options'][$client->id] = $client->name;        }        $this->data['dropdown_client']['default'] = $row->client_id;        // Fetch ad_types        $ad_types = $this->ad_type_model->find_all();        /* $this->data['dropdown_ad_type']['options'] = array();          $this->data['dropdown_ad_type']['options'][''] = 'Select Advertisement Type';          foreach ($ad_types as $ad_type) {          $this->data['dropdown_ad_type']['options'][$ad_type->id] = $ad_type->name;          }          $this->data['dropdown_ad_type']['default'] = set_value('ad_type'); *///        $this->data['dropdown_ad_type'] = '<select id="ad_type" onchange="setSize();resetPackages();" name="ad_type" class="form-control">';        $this->data['dropdown_ad_type'] = '<select id="ad_type" onchange="setSize();loadPackages(this, \'package\')" name="ad_type" class="form-control">';        $this->data['dropdown_ad_type'] .= '<option value="">Select Advertisement Type</option>';        foreach ($ad_types as $ad_type) {            if ($ad_type->id == $row->advertisement_type_id) {                $selected = 'selected="selected"';            } else {                $selected = '';            }            $this->data['dropdown_ad_type'] .= '<option data-size="' . $ad_type->size . '" value="' . $ad_type->id . '" ' . $selected . '>' . $ad_type->name . '</option>';        }        $this->data['dropdown_ad_type'] .= '</select>';        // Fetch packages        $packages = $this->vendor_model->get_packages($row->vendor_id, $row->advertisement_type_id);        $this->data['dropdown_package']['options'] = array();        if ($packages) {            $this->data['dropdown_package']['options'][''] = 'Remove Package';            foreach ($packages as $package) {                $this->data['dropdown_package']['options'][$package->package_id] = $package->package_name;            }        } else {            $this->data['dropdown_package']['options'][''] = 'No Packages Found';        }        $this->data['dropdown_package']['default'] = $row->package_id;        // Fetch publications        /* $publications = $this->publication_model->find_all();          $this->data['dropdown_publication']['options'] = array();          $this->data['dropdown_publication']['options'][''] = 'Select Publication';          foreach ($publications as $publication) {          $this->data['dropdown_publication']['options'][$publication->name] = $publication->name;          }          $this->data['dropdown_publication']['default'] = set_value('publication'); */        // Fetch page types        $page_types = $this->page_type_model->find_all();        $this->data['dropdown_page_type']['options'] = array();        $this->data['dropdown_page_type']['options'][''] = 'Select Page Type';        if ($page_types) {            foreach ($page_types as $page_type) {                $this->data['dropdown_page_type']['options'][$page_type->name] = $page_type->name;            }        }        $this->data['dropdown_page_type']['default'] = set_value('page_type');        // Fetch material types        $material_types = $this->material_type_model->find_all();        $this->data['dropdown_material_type']['options'] = array();        $this->data['dropdown_material_type']['options'][''] = 'Select Material Type';        foreach ($material_types as $material_type) {            $this->data['dropdown_material_type']['options'][$material_type->name] = $material_type->name;        }        $this->data['dropdown_material_type']['default'] = $row->material_type;        // Fetch material status        $material_statuses = $this->material_status_model->find_all();        $this->data['dropdown_material_status']['options'] = array();        $this->data['dropdown_material_status']['options'][''] = 'Select Material Status';        foreach ($material_statuses as $material_status) {            $this->data['dropdown_material_status']['options'][$material_status->name] = $material_status->name;        }        $this->data['dropdown_material_status']['default'] = $row->material_status;        // Fetch tax        $tax_items = $this->tax_model->find_all();        $this->data['dropdown_tax_items'] = '<select id="tax" name="tax" class="form-control" onchange="computeTax();">';        $this->data['dropdown_tax_items'] .= '<option value="">Select Tax</option>';        foreach ($tax_items as $tax_item) {            if ($row->tax_name == $tax_item->name) {                $selected = 'selected="selected"';            } else {                $selected = '';            }            if ($tax_item->type === 'percentage') {                $tax_item_value = $tax_item->name . ' (' . $tax_item->value . '%)';            } else {                $tax_item_value = $tax_item->name . ' (Rs.' . number_format($tax_item->value, 2, '.', '') . ')';            }            $this->data['dropdown_tax_items'] .= '<option ' . $selected . ' data-taxtype="' . $tax_item->type . '" data-taxvalue="' . $tax_item->value . '" value="' . $tax_item->id . '">' . $tax_item_value . '</option>';        }        $this->data['dropdown_tax_items'] .= '<select>';        // Load view        $this->data['subview'] = $this->load->view('release_order/edit', $this->data, TRUE);        $this->load->view('layout/header');        $this->load->view('layout/_main', $this->data);        $this->load->view('layout/footer');    }    public function view($id) {        $this->load->model('vendor_model');        $this->load->model('client_model');        $this->load->model('ad_type_model');        $this->load->model('publication_model');        $this->load->model('page_type_model');        $this->load->model('material_type_model');        $this->data['scripts'][] = base_url('assets/dist/js/release-order-add.js');        $this->data['action'] = 'release_order/edit/' . $id;        $row = $this->release_order_model->find_by_id($id);        $this->data['release_order'] = $row;        $this->data['order_items'] = $this->release_order_model->get_release_order_items($id);        $this->data['vendor_id'] = $row->vendor_id;        $this->data['release_order_no'] = $row->release_order_no_prefix . $row->release_order_no;        $this->data['ad_type_id'] = $row->advertisement_type_id;        //Fetch co-ordinator Name        $this-> data['dropdown_coordinatorName']['default'] =  $row->coordinator_name;                      /*         * Validation rules         */        $rules_add_order = array(            array(                'field' => 'vendor',                'label' => 'Vendor',                'rules' => 'required|integer',                'errors' => array(                    'integer' => "Invalid vendor selected"                )            )        );        $this->form_validation->set_rules($rules_add_order);        if ($this->form_validation->run() === FALSE) {            $this->data['message'] = (validation_errors() == '') ? $this->session->flashdata('message') : alert_message(validation_errors(), 'error');        } else {            $this->release_order_model->update($id);            $this->session->set_flashdata('message', alert_message('Order updated successfully', 'success'));            redirect('release_order/edit/' . $id, 'refresh');        }        /*         * Form inputs         */        $this->data['input_caption'] = array('name' => 'caption', 'value' => $row->caption);        $this->data['input_material_status'] = array('name' => 'material_status', 'value' => $row->material_status);        // Fetch vendors        $vendors = $this->vendor_model->find_all();        $this->data['dropdown_vendor']['options'] = array();        $this->data['dropdown_vendor']['options'][''] = 'Select Vendor';        foreach ($vendors as $vendor) {            $this->data['dropdown_vendor']['options'][$vendor->id] = $vendor->company_name;            //Fetch company name and address of vendor            if ($vendor->id == $row->vendor_id) {                   # code...                    $this-> data['dropdown_VendorcompanyPhone']['default'] = $vendor->company_phone;                    $this-> data['dropdown_VendorcompanyAddress']['defaultA'] = $vendor->address;               }           }        $this->data['dropdown_vendor']['default'] = $row->vendor_id;                        // Fetch clients        $clients = $this->client_model->find_all();        $this->data['dropdown_client']['options'] = array();        $this->data['dropdown_client']['options'][''] = 'Select Client';        foreach ($clients as $client) {            $this->data['dropdown_client']['options'][$client->id] = $client->name;        }        $this->data['dropdown_client']['default'] = $row->client_id;        // Fetch ad_types        $ad_types = $this->ad_type_model->find_all();        $this->data['ad_types'] = $ad_types;        $ad_type = $this->ad_type_model->find_by_id($row->advertisement_type_id);        $this->data['ad_type'] = $ad_type;        /* $this->data['dropdown_ad_type']['options'] = array();          $this->data['dropdown_ad_type']['options'][''] = 'Select Advertisement Type';          foreach ($ad_types as $ad_type) {          $this->data['dropdown_ad_type']['options'][$ad_type->id] = $ad_type->name;          }          $this->data['dropdown_ad_type']['default'] = set_value('ad_type'); */        // Fetch publications        /* $publications = $this->publication_model->find_all();          $this->data['dropdown_publication']['options'] = array();          $this->data['dropdown_publication']['options'][''] = 'Select Publication';          foreach ($publications as $publication) {          $this->data['dropdown_publication']['options'][$publication->name] = $publication->name;          }          $this->data['dropdown_publication']['default'] = set_value('publication'); */        // Fetch page types        $page_types = $this->page_type_model->find_all();        $this->data['dropdown_page_type']['options'] = array();        $this->data['dropdown_page_type']['options'][''] = 'Select Page Type';        if ($page_types) {            foreach ($page_types as $page_type) {                $this->data['dropdown_page_type']['options'][$page_type->name] = $page_type->name;            }        }        $this->data['dropdown_page_type']['default'] = set_value('page_type');        // Fetch material types        $material_types = $this->material_type_model->find_all();        $this->data['dropdown_material_type']['options'] = array();        $this->data['dropdown_material_type']['options'][''] = 'Select Material Type';        foreach ($material_types as $material_type) {            $this->data['dropdown_material_type']['options'][$material_type->name] = $material_type->name;        }        $this->data['dropdown_material_type']['default'] = $row->material_type;        // Load view        $this->data['subview'] = $this->load->view('release_order/single_view', $this->data, TRUE);        $this->load->view('layout/header');        $this->load->view('layout/_main', $this->data);        $this->load->view('layout/footer');    }    public function fetch_post() {        $draw = $this->input->post('draw');        $limit = $this->input->post('length');        $offset = $this->input->post('start');        $search = $this->input->post('search[value]');        $sort_column = $this->input->post('order[0][column]');        $order = $this->input->post('order[0][dir]');        $data = array(            'limit' => $limit,            'offset' => $offset,            'search' => $search,            'sort' => $sort_column,            'order' => $order        );        $total_records = $this->release_order_model->total_records();        $return_data = $this->release_order_model->get_view($data);        if ($return_data['query']) {            $index = 1;            foreach ($return_data['query']->result() as $row) {                $action = "<a href='" . base_url('release_order/view/' . html_escape($row->id)) . "' class='btn btn-xs btn-primary'><i class='fa fa-list'></i></a>&nbsp;";                if ($row->invoice_generated == 0) {                    $action .= "<a href='" . base_url('release_order/edit/' . html_escape($row->id)) . "' class='btn btn-xs btn-success'><i class='fa fa-edit'></i></a>";                } else {                    $action .= "<a class='btn btn-xs btn-success disabled'><i class='fa fa-edit'></i></a>";                }                $rows[] = array(                    $index++,//                    form_checkbox('chk_row[]', $row->id, FALSE, array('class' => 'chk_row')),                    html_escape(date('d/m/Y', strtotime($row->order_date))),                    html_escape($row->release_order_no),                    html_escape($row->vendor_name),                    html_escape($row->client_name),                    html_escape($row->caption),                    html_escape($row->total_amount),                    $action//                    . "&nbsp;&nbsp;<a href='' class='btn btn-xs btn-danger'><i class='fa fa-times'></i></a>"                );            }            $filtered_records = $return_data['count'];        } else {            $filtered_records = 0;            $rows = '';        }        $output = array(            'draw' => (int) $draw,            'recordsFiltered' => $filtered_records,            'recordsTotal' => $total_records,            'data' => $rows        );        $this->output                ->set_content_type('application/json')                ->set_output(json_encode($output));    }    public function bulk_delete() {        $ids = $this->input->post('data_ids');        if (empty($ids)) {            $this->session->set_flashdata('message', alert_message('Selected atleast one record to delete', 'success'));            redirect('order', 'refresh');        }        $id_array = explode(",", $ids);        foreach ($id_array AS $id) {            $this->release_order_model->delete($id);        }        $this->session->set_flashdata('message', alert_message('Selected records are deleted', 'success'));        redirect('order', 'refresh');    }}