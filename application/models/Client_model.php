<?phpclass Client_Model extends CI_Model {    private $_tablename;    function __construct() {        parent::__construct();        $this->_tablename = "clients";    }    public function total_records() {        return $this->db->count_all($this->_tablename);    }    public function find_all($limit = NULL, $offset = NULL) {        if ($limit != NULL && $offset != NULL) {            $this->db->limit($limit, $offset);        }        $query = $this->db->get($this->_tablename);        if ($query->num_rows() > 0) {            return $query->result();        }        return FALSE;    }    public function find_by_id($id = NULL) {        $this->db->where('id', $id);        $query = $this->db->get($this->_tablename);        if ($query->num_rows() > 0) {            return $query->row();        }        return FALSE;    }    public function get_view($data) {        $columns = array('', 'name', 'email', 'phone', '');        $this->db->select('id,name,email,phone,type');        if (isset($data['search']) && $data['search'] != '') {            $this->db->like('name', $data['search']);            $this->db->or_like('email', $data['search']);            $this->db->or_like('phone', $data['search']);        }        if (isset($data['sort']) && $data['sort'] != '') {            $this->db->order_by($columns[$data['sort']], strtoupper($data['order']));        }        $db_count = clone $this->db;        $this->db->limit($data['limit'], $data['offset']);        $query = $this->db->get($this->_tablename);        $count = $db_count->count_all_results($this->_tablename);        $return = array('query' => $query, 'count' => $count);        if ($query->num_rows() > 0) {            return $return;        }        return FALSE;    }    public function find_by_query($data,$limit=NULL,$offset=NULL) {        $this->db->where($data);        if ($limit != NULL && $offset != NULL) {            $this->db->limit($limit, $offset);        }        $query = $this->db->get($this->_tablename);        if ($query->num_rows() > 0) {            return $query->result();        }        return FALSE;    }    public function find_release_orders($client_id) {        $this->db->select('release_orders.id,CONCAT(release_order_no_prefix,release_order_no) AS release_order_no');        $conditions = array(            'client_id' => $client_id,            'invoice_generated' => 0,        );        $this->db->where($conditions);        $this->db->order_by('release_order_no', 'ASC');        $query = $this->db->get('release_orders');        if ($query->num_rows() > 0) {            return $query->result();        }        return FALSE;    }        public function find_all_release_orders($client_id) {        $this->db->select('release_orders.id,CONCAT(release_order_no_prefix,release_order_no) AS release_order_no');        $conditions = array(            'client_id' => $client_id,//            'invoice_generated' => 0,        );        $this->db->where($conditions);        $this->db->order_by('release_order_no', 'ASC');        $query = $this->db->get('release_orders');        if ($query->num_rows() > 0) {            return $query->result();        }        return FALSE;    }        public function find_invoices($client_id) {        $this->db->select('invoices.id,CONCAT(invoice_no_prefix,invoice_no) AS invoice_no');        $conditions = array(            'client_id' => $client_id,        );        $this->db->where($conditions);        $this->db->order_by('invoice_no', 'ASC');        $query = $this->db->get('invoices');        if ($query->num_rows() > 0) {            return $query->result();        }        return FALSE;    }    public function create() {        $data = array(            'user_id' => $this->session->user_id,            'parent_id' => $this->input->post('parent_client'),            'name' => $this->input->post('fullname'),            'phone' => $this->input->post('phone'),            'email' => $this->input->post('email'),            'address' => $this->input->post('address'),            'type' => 'individual',            'created' => date('Y-m-d H:i:s', time())        );        $this->db->insert($this->_tablename, $data);        if ($this->db->affected_rows() > 0) {            return $this->db->insert_id();        }        return FALSE;    }    public function create_company() {        $data = array(            'user_id' => $this->session->user_id,            'parent_id' => $this->input->post('parent_client'),            'name' => $this->input->post('company_name'),            'type' => 'company',            'created' => date('Y-m-d H:i:s', time())        );        $this->db->insert($this->_tablename, $data);        if ($this->db->affected_rows() > 0) {            $insert_id = $this->db->insert_id();            /* BEGIN: insert co ordinators */            $count = count($this->input->post('coord_fullname[]'));            $fullnames = $this->input->post('coord_fullname[]');            $phone_nos = $this->input->post('coord_phone[]');            $emails = $this->input->post('coord_email[]');            $designations = $this->input->post('coord_designation[]');            for ($i = 0; $i < $count; $i++) {                $data = array(                    'client_id' => $insert_id,                    'name' => $fullnames[$i],                    'phone' => $phone_nos[$i],                    'email' => $emails[$i],                    'designation' => $designations[$i],                    'created' => date('Y-m-d H:i:s', time())                );                $this->db->insert('client_coordinators', $data);            }            /* END: insert co ordinators */            return $insert_id;        }        return FALSE;    }    public function update($id) {        $data = array(            'parent_id' => $this->input->post('parent_client'),            'name' => $this->input->post('fullname'),            'phone' => $this->input->post('phone'),            'email' => $this->input->post('email'),            'address' => $this->input->post('address'),            'type' => 'individual',            'address' => $this->input->post('address'),            'modified' => date('Y-m-d H:i:s', time())        );        $this->db->where('id', $id);        $this->db->update($this->_tablename, $data);        $affected_rows = $this->db->affected_rows();        if ($affected_rows > 0) {            return $affected_rows;        }        return FALSE;    }        public function update_company($id) {        $data = array(            'user_id' => $this->session->user_id,            'parent_id' => $this->input->post('parent_client'),            'name' => $this->input->post('company_name'),            'type' => 'company',            'modified' => date('Y-m-d H:i:s', time())        );        $this->db->where('id', $id);        $this->db->update($this->_tablename, $data);        if ($this->db->affected_rows() > 0) {            return $id;        }        return FALSE;    }    public function delete($id) {        $this->db->where('id', $id);        $this->db->delete($this->_tablename);        $affected_rows = $this->db->affected_rows();        if ($affected_rows > 0) {            return $affected_rows;        }        return FALSE;    }    public function get_coordinator($id) {//        $this->db->select('');        $this->db->from('client_coordinators');        $this->db->where('id', $id);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $query->row();        }        return FALSE;    }    public function get_coordinators($id) {//        $this->db->select('');        $this->db->from('client_coordinators');        $this->db->where('client_id', $id);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return $query->result();        }        return FALSE;    }        public function add_coordinator($client_id) {        $count = count($this->input->post('fullname'));        $fullnames = $this->input->post('fullname');        $phone_nos = $this->input->post('phone');        $emails = $this->input->post('email');        $designations = $this->input->post('designation');        for ($i = 0; $i < $count; $i++) {            $data = array(                'client_id' => $client_id,                'name' => $fullnames,                'phone' => $phone_nos,                'email' => $emails,                'designation' => $designations,                'created' => date('Y-m-d H:i:s', time())            );            $this->db->insert('client_coordinators', $data);        }    }        public function update_coordinator($coordinator_id) {        $count = count($this->input->post('fullname'));        $fullnames = $this->input->post('fullname');        $phone_nos = $this->input->post('phone');        $emails = $this->input->post('email');        $designations = $this->input->post('designation');        for ($i = 0; $i < $count; $i++) {            $data = array(                'name' => $fullnames,                'phone' => $phone_nos,                'email' => $emails,                'designation' => $designations,                'created' => date('Y-m-d H:i:s', time())            );            $this->db->where('id', $coordinator_id);            $this->db->update('client_coordinators', $data);        }    }}